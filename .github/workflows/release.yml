name: Release

on:
  push:
    branches:
      - 'release/*'
  pull_request:
    branches:
      - 'master'

env:
  MIN_COVERAGE_OVERALL: 0
  MIN_COVERAGE_CHANGED: 0

jobs:
  check:
    runs-on: self-hosted
    env:
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    steps:
      # --------------------------------------
      # Install
      # --------------------------------------
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - uses: android-actions/setup-android@v3
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26c
          link-to-sdk: true
      - uses: gradle/actions/setup-gradle@v3
      # --------------------------------------
      # Run
      # --------------------------------------
      - uses: actions/checkout@v4
      - run: ./gradlew :app:lintRelease testReleaseUnitTest :app:koverHtmlReportRelease :app:koverXmlReportRelease :app:assembleRelease :app:bundleRelease
      - run: ./gradlew testDeviceDebugAndroidTest '-Dorg.gradle.jvmargs=-Xmx6g -Dfile.encoding=UTF-8' '-Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect'
      # --------------------------------------
      # Analyze
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Lint
          path: "**/build/reports/lint-results*.html"
          if-no-files-found: error
      # --------------------------------------
      # Test
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Unit Test
          path: "**/build/reports/tests/"
          if-no-files-found: error
      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Test Report
          path: "**/build/test-results/test*/TEST-*.xml"
          reporter: java-junit
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Android Test
          path: "**/build/reports/androidTests/"
          if-no-files-found: error
      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Android Test Report
          path: "**/build/outputs/androidTest-results/**/TEST-*.xml"
          reporter: java-junit
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage
          path: "**/build/reports/kover/html*/"
          if-no-files-found: error
      - uses: mi-kas/kover-report@v1
        if: always()
        with:
          path: ${{ github.workspace }}/app/build/reports/kover/reportRelease.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: ${{ env.MIN_COVERAGE_OVERALL }}
          min-coverage-changed-files: ${{ env.MIN_COVERAGE_CHANGED }}
          coverage-counter-type: INSTRUCTION
      # --------------------------------------
      # Build
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: Assemble
          path: "app/build/outputs/apk/release/*.apk"
          if-no-files-found: error
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: Bundle
          path: "app/build/outputs/bundle/release/*.aab"
          if-no-files-found: error
      # --------------------------------------
      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: Mapping
          path: "app/build/outputs/mapping/release/*.txt"
          if-no-files-found: error
