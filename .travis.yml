language: java
jdk: oraclejdk8

env:
  global:
    - ANDROID_EMULATOR_SDK: 28
    - ANDROID_SDK_REPOSITORY: "https://dl.google.com/android/repository"
    - ANDROID_SDK_TOOLS: "4333796"
    - ANDROID_SDK_DIR: "android-sdk"
    - GRADLE_DIR: ".gradle"
    - ANDROID_WAIT_FOR_EMULATOR_LINK: "https://raw.githubusercontent.com/travis-ci/travis-cookbooks/master/community-cookbooks/android-sdk/files/default/android-wait-for-emulator"

before_install:
  - if [[ ! -d ${ANDROID_SDK_DIR} ]] ; then wget -q -O android-sdk.zip ${ANDROID_SDK_REPOSITORY}/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip ; fi
  - if [[ ! -d ${ANDROID_SDK_DIR} ]] ; then unzip -d ${ANDROID_SDK_DIR} android-sdk.zip > /dev/null ; fi
  # setting environmental variables
  - export ANDROID_SDK_ROOT=$PWD/${ANDROID_SDK_DIR}
  - export GRADLE_USER_HOME=$PWD/${GRADLE_DIR}
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --licenses > /dev/null
  - set -o pipefail
  # creating emulator
  - ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager "platform-tools" "emulator" "system-images;android-${ANDROID_EMULATOR_SDK};google_apis;x86"
  - echo y | ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager --update
  - echo no | ${ANDROID_SDK_ROOT}/tools/bin/avdmanager create avd -n test -k "system-images;android-${ANDROID_EMULATOR_SDK};google_apis;x86"
  # starting emulator
  - mkdir -p ${ANDROID_SDK_ROOT}/emulator
  - mkdir -p ${ANDROID_SDK_ROOT}/platforms
  - mkdir -p ${ANDROID_SDK_ROOT}/platform-tools
  - mkdir -p ${ANDROID_SDK_ROOT}/system-images
  - ${ANDROID_SDK_ROOT}/emulator/emulator -avd test -no-window -no-accel &
  # connecting to emulator
  - wget -q -O android-wait-for-emulator ${ANDROID_WAIT_FOR_EMULATOR_LINK}
  - chmod +x android-wait-for-emulator
  - PATH="$PATH:$ANDROID_SDK_ROOT/platform-tools"
  - ./android-wait-for-emulator
  - ${$ANDROID_SDK_ROOT}/platform-tools/adb shell input keyevent 82 # pass lockscreen

install:
  - ./gradlew init

script:
  - ./gradlew detekt lint assemble